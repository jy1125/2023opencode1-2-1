0918

go run .\폴더명\파일명  *실행 됨
#go.mod가 뭔지
module boo

go 1.21.1##

기본 main함수 (=C랑 같음)_____________import("fmt") *fmt가 main같은거
직접 코딩하는 부분은 func main(){ 내 용 } 형식으로 작성

<수학함수> _________ import ("math") *수학 함수 
math.Floor *버림 함수 ex)2.75 > 2
math.Ceil *올림 함수

<자료형>
reflect.Typeof() *어떤 자료형인지 알려주는 함수 p.14-15

<변수 선언> -- go는 camel형식으로 선언 ex) koreaZombie
var a int *a 라는 변수명으로 int 형식
var b float32 *b 라는 변수명으로 float32형식 변수
var c string *c라는 변수명으로 string형식 변수

a = 9
b = 2.7
c = "inha"

fmt.println(a, b, c) *변수는 한번 선언하면 반드시 사용해야함 (오류남)

==> var a int = 9 형식으로 줄여서 써도 가능

float64 = C에서 더블형 
go 에서 float를 32인지 64인지 안주게되면 64로 자동 배정 -> 저장공간 ^^ 
  => 애초에 float32로 함수 선언

변수가 대문자로 시작 -> 다른 패키지에서도 대문자 사용한 변수 선언 가능

<단축변수기호>
a := "문자열" *변수명 := 형식 하면 바로 선언 됨 ('Z' 하면 아스키코드 순서로 나옴 90)

<제로 변수>
선언 하고 변수 값을 안주고 출력하면 자동으로 0 출력
하지만 string 타입은 0도 안나옴 공백 *제로 변수(값) 이라고 부름 p.17
#bool

<타입 변환> p.22
타입이 다르면 연산, 비교가 안됨
float(변수명) = 타입명(변수명) ex) fmt.Println(a > int(b)) 
일시적으로 그 라인만 바뀜 
 a := 9
 b := 2.7
 fmt.Println(a > int(b)) << b는 int형으로 바뀜
 fmt.Println(a = b) << 오류 b는 아직 float형